{"version":3,"sources":["components/services/image-api.jsx","components/ImageErrorView/ImageErrorView.jsx","components/Loader/Loader.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","components/ImageInfo/ImageInfo.jsx","App.js","index.js"],"names":["KEY","searchName","page","a","fetch","response","ok","json","Promise","reject","Error","fetchImage","ImageErrorView","message","role","ImageLoader","type","color","height","width","Component","ImageGalleryItem","image","toggleModal","className","src","webformatURL","alt","tags","onClick","status","largeImageURL","ImageGallery","images","map","id","modalRoot","document","querySelector","Modal","handleKeyDown","event","key","target","currentTarget","props","window","addEventListener","this","removeEventListener","createPortal","Button","Searchbar","state","imageName","changeInput","evt","setState","value","handleSubmit","preventDefault","trim","onSubmit","toast","onChange","autoComplete","autoFocus","placeholder","ImageInfo","totalHits","searchQuery","isLoading","error","notify","showModal","activeButton","targetImage","onClickLoadMore","prevState","checkLoadMore","length","searchImages","prevProps","then","newImage","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.276315c7.chunk.js","sourcesContent":["const KEY = \"24498765-29ee438a61ceedd9aaf6213cc\";\nasync function fetchImage(searchName, page) {\n  const response = await fetch(\n    `https://pixabay.com/api/?q=${searchName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n  if (response.ok) {\n    return response.json();\n  }\n  return await Promise.reject(new Error(`No images`));\n}\n\nexport default fetchImage;\n","import PropTypes from \"prop-types\";\n\nfunction ImageErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImageErrorView;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass ImageLoader extends Component {\n  render() {\n    return <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />;\n  }\n}\n\nexport default ImageLoader;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ image, toggleModal }) => {\n  const onClick = () => {\n    toggleModal({\n      status: true,\n      src: image.largeImageURL,\n      alt: image.tags,\n    });\n  };\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={onClick}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nconst ImageGallery = ({ images, toggleModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image) => (\n        <ImageGalleryItem\n          image={image}\n          key={image.id}\n          toggleModal={toggleModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.key === \"Escape\" || event.target === event.currentTarget) {\n      this.props.toggleModal({ status: false });\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleKeyDown}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load More\n    </button>\n  );\n};\n\nexport default Button;\n","import { Component } from \"react\";\nimport { ImSearch } from \"react-icons/im\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport PropTypes from \"prop-types\";\n\nclass Searchbar extends Component {\n  state = {\n    imageName: \"\",\n  };\n\n  changeInput = (evt) => {\n    this.setState({ imageName: evt.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === \"\") {\n      toast(\"Enter the word\");\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <ImSearch />\n          </button>\n          <input\n            value={this.state.imageName}\n            onChange={this.changeInput}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { Component } from \"react\";\nimport fetchImage from \"../services/image-api.jsx\";\nimport ImagesErrorView from \"../ImageErrorView/ImageErrorView\";\nimport ImageLoader from \"../Loader/Loader\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Modal from \"../Modal/Modal\";\nimport Button from \"../Button/Button\";\nimport Searchbar from \"../Searchbar/Searchbar\";\n\nclass ImageInfo extends Component {\n  state = {\n    images: [],\n    totalHits: 0,\n    searchQuery: \"\",\n    page: 1,\n    isLoading: false,\n    error: null,\n    notify: false,\n    message: \"\",\n    showModal: false,\n    activeButton: false,\n    targetImage: null,\n  };\n\n  componentDidMount() {\n    this.searchImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n\n    if (prevState.searchQuery !== searchQuery) {\n      this.searchImages(searchQuery, 1);\n      this.setState({ page: 1 });\n    }\n    if (prevState.page !== page) {\n      this.searchImages(searchQuery, page);\n    }\n  }\n  searchImages(searchQuery = \"\", page = 1) {\n    if (searchQuery !== \"\") {\n      this.setState({\n        isLoading: true,\n        notify: false,\n      });\n\n      fetchImage(searchQuery, page)\n        .then((newImage) => {\n          if (page === 1) {\n            this.setState({\n              totalHits: newImage.totalHits,\n              images: newImage.hits,\n            });\n          } else {\n            this.setState((prevState) => ({\n              images: [...prevState.images, ...newImage.hits],\n            }));\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: \"smooth\",\n            });\n          }\n          this.checkLoadMore();\n        })\n        .catch((error) => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    } else {\n      this.setState({\n        images: [],\n        activeButton: false,\n        message: \"Please input search request\",\n        notify: true,\n      });\n    }\n  }\n\n  onSubmit = (value) => {\n    this.setState({ searchQuery: value });\n  };\n\n  onClickLoadMore = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  checkLoadMore = () => {\n    const { totalHits, images } = this.state;\n\n    if (totalHits > images.length) {\n      this.setState({ activeButton: true });\n    } else {\n      this.setState({ activeButton: false });\n    }\n\n    if (!totalHits) {\n      this.setState({\n        message: \"Nothing was found. Try again.\",\n        notify: true,\n      });\n    } else {\n      this.setState({ notify: false });\n    }\n  };\n\n  toggleModal = ({ status, src, alt }) => {\n    if (status) {\n      this.setState({\n        targetImage: { src, alt },\n        showModal: true,\n      });\n    } else {\n      this.setState({\n        targetImage: null,\n        showModal: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      notify,\n      message,\n      showModal,\n      targetImage,\n      activeButton,\n    } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        {error && <ImagesErrorView message={error.message} />}\n        {isLoading && <ImageLoader />}\n        {images.length > 0 && (\n          <ImageGallery images={images} toggleModal={this.toggleModal} />\n        )}\n        {notify && <ImagesErrorView message={message} />}\n        {showModal && (\n          <Modal\n            src={targetImage.src}\n            alt={targetImage.alt}\n            toggleModal={this.toggleModal}\n          />\n        )}\n        {activeButton && <Button onClick={this.onClickLoadMore} />}\n      </>\n    );\n  }\n}\n\nexport default ImageInfo;\n","import { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport ImageInfo from \"./components/ImageInfo/ImageInfo\";\n\nexport default class App extends Component {\n  state = {\n    imageName: \"\",\n  };\n\n  handleFormSubmit = (imageName) => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <>\n        <ImageInfo imageName={this.state.imageName} />\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n"],"sourceRoot":""}